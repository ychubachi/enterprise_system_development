チームでまわすイテレーション
========================================

チケット駆動型開発（TiDD）
--------------------------

チケットとは，仕事に取りかかるために必要な切符のようなものです．TiDDでは，仕事をする前に，必ずチケットを発行しなくてはなりません．このことを「No ticket! No commit」と言います．

チケットは誰が読んでも仕事の内容が分かるものでなくてはなりません．このチケットをグループ内で有効に共有して，プロジェクトを進めるのがTiDDです．チケットの「書き方」に関する大原則は次の通りです [#ticket]_ ．

- やらなければいけないことを網羅する
- 誰が見ても分かるようにかく
- タスクの終了条件をはっきりさせる
- 大きなタスクは処理しやすい大きさに分ける
- 進捗がわかるようにする（誰がやってるか？もう終わったか？）
- リストは定期的に見直す

これらに加えて，次のことを追加します．

- チケットは，メンバーが自ら発行する
- チケットは，メンバーが自らとりにいく

チームメンバー全員が，チケットを介して主体的に仕事の分担をするのが理想です．

※チケットの状況（進捗）は成績評価に反映させますので，必ずチケットを発行した上で仕事を始め，進捗があったらチケットの状態を変化させてください．

Scrum会議
----------------------------------------

* すべてのメンバーで次の事柄を共有します

  - 前回のScrum会議以降にやったこと
  - これから次のScrum会議までにやること
  - 現在困っていることを

* 議事録を作成しておいてください

http://www.atmarkit.co.jp/fjava/index/index_scrum.html

GitHubの利用
----------------------------------------

* GitHubのリポジトリにコラボレータを追加することで複数人での共同開発ができるようになります．
* GitHubのissueを使って，チケットを管理できます．
* Scrum会議の議事録などのドキュメントはGitHubのWikiで共有するとよいでしょう．

.. rubric:: 参考文献

.. [#ticket] http://www.slideshare.net/Ryuzee/ss-9800501

.. Local Variables:
.. compile-command: "(cd .. && make html)"
.. End:
