概要
====

授業の目標
----------

* 少人数のチームで，イテレーションサイクルを回すことができるようになる．

授業の日程
----------
#. 12/8
#. 12/15
#. 12/22
#. 1/12
#. 1/19
#. 1/26
#. 2/2
#. 2/9

演習の進め方
============

Stage 1: イテレーションを一人でまわす
-------------------------------------

自分のマシンに開発環境を構築し，一人でイテレーションを回してみます．イテレーションサイクルは次の図に示す通りです．

.. image:: _static/IterationCycle.png
   :width: 100%

Stage 2: イテレーションをチームでまわす
---------------------------------------

サーバを構築し，チームでイテレーションを回してみます．ここでは，GitHubを使った共同開発をします．

.. image:: _static/IterationCycleWithGitHub.png
   :width: 100%


Stage 3: 基幹システムを開発する
-------------------------------

冗長性や可用性，拡張性などを備えたシステムをチームで開発します．

利用する技術
============

利用する技術についての方針
--------------------------

Stage 2までは，利用する技術を指定します．全員が同じ環境で，作業をすることになります．作成するプログラムは簡単なものですので，プログラミング言語になれているかどうかの違いはあまり気にならないはずです．目標はあくまでもイテレーションサイクルを回してみることです．

Stage 3まで進んだら，チーム内でお好きな技術を使って開発してみてください．なお，Stage 2とStage 3との間で，チームを組み替える可能性があります．

Ruby on Railsを用いた開発
-------------------------
.. image:: _static/Rails.png
   :width: 100%

要素技術
--------
* Server
* `Phusion Passenger`_ RailsアプリケーションをApacheに接続して動作させるためのモジュール
* `Capistrano`_ 

.. _Phusion Passenger: http://www.modrails.com
.. _Capistrano: https://github.com/capistrano/capistrano/wiki/Documentation-v2.x
